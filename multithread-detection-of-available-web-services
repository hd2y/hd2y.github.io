<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  
  
  <title>多线程检测可用的 Web 服务 | 华灯</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="在日常开发中，各个系统之间进行通信，用的比较多的还是 HTTP 协议，其中 WebService 服务也是我最常用的。 因为正常我们会配置多台 Web 服务器，所以为了确保调用的服务一直是正常的状态，我们需要在服务不可用的时候，自动的将服务切换到正常的 Web 服务器上。  注：内容主要是以 WebService 进行举例，如果使用其他的通信方案，例如 WCF、Web Api 等等，其实也是一样的">
<meta property="og:type" content="article">
<meta property="og:title" content="多线程检测可用的 Web 服务">
<meta property="og:url" content="http://example.com/multithread-detection-of-available-web-services">
<meta property="og:site_name" content="华灯">
<meta property="og:description" content="在日常开发中，各个系统之间进行通信，用的比较多的还是 HTTP 协议，其中 WebService 服务也是我最常用的。 因为正常我们会配置多台 Web 服务器，所以为了确保调用的服务一直是正常的状态，我们需要在服务不可用的时候，自动的将服务切换到正常的 Web 服务器上。  注：内容主要是以 WebService 进行举例，如果使用其他的通信方案，例如 WCF、Web Api 等等，其实也是一样的">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129153036_1580364437962.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129175355_1580364437963.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129175355_1580364437963.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/20200130113248_1580364440220.png">
<meta property="article:published_time" content="2020-01-30T06:18:54.000Z">
<meta property="article:modified_time" content="2020-01-30T06:51:07.000Z">
<meta property="article:author" content="hd2y">
<meta property="article:tag" content="WebService">
<meta property="article:tag" content="多线程">
<meta property="article:tag" content="WCF">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129153036_1580364437962.png">
  
    <link rel="alternate" href="/atom.xml" title="华灯" type="application/atom+xml">
  
  
    <link rel="shortcut icon" href="/favicon.png">
  
  
    
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/typeface-source-code-pro@0.0.71/index.min.css">

  
  
<link rel="stylesheet" href="/css/style.css">

  
    
<link rel="stylesheet" href="/fancybox/jquery.fancybox.min.css">

  
<meta name="generator" content="Hexo 5.3.0"></head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">华灯</a>
      </h1>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS 订阅"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="搜索"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="搜索"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://example.com"></form>
      </div>
    </div>
  </div>
</header>

      <div class="outer">
        <section id="main"><article id="post-multithread-detection-of-available-web-services" class="h-entry article article-type-post" itemprop="blogPost" itemscope itemtype="https://schema.org/BlogPosting">
  <div class="article-meta">
    <a href="/multithread-detection-of-available-web-services" class="article-date">
  <time class="dt-published" datetime="2020-01-30T06:18:54.000Z" itemprop="datePublished">2020-01-30</time>
</a>
    
  <div class="article-category">
    <a class="article-category-link" href="/categories/%E5%BC%80%E5%8F%91/">开发</a>►<a class="article-category-link" href="/categories/%E5%BC%80%E5%8F%91/C/">C#</a>
  </div>

  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="p-name article-title" itemprop="headline name">
      多线程检测可用的 Web 服务
    </h1>
  

      </header>
    
    <div class="e-content article-entry" itemprop="articleBody">
      
        <p>在日常开发中，各个系统之间进行通信，用的比较多的还是 HTTP 协议，其中 WebService 服务也是我最常用的。</p>
<p>因为正常我们会配置多台 Web 服务器，所以为了确保调用的服务一直是正常的状态，我们需要在服务不可用的时候，自动的将服务切换到正常的 Web 服务器上。</p>
<blockquote>
<p>注：内容主要是以 WebService 进行举例，如果使用其他的通信方案，例如 WCF、Web Api 等等，其实也是一样的。</p>
</blockquote>
<h2 id="服务连接"><a href="#服务连接" class="headerlink" title="服务连接"></a>服务连接</h2><p>因为搭建服务做这个测试相对繁琐，如果对 WebService 服务使用有疑问，可以看我的 SOA 系列文章中的：<a href="/archives/soa-web-service-knowledge-summary"><br>SOA —— WebService 知识点总结</a>。</p>
<p>而且其实服务可用的检测，除可以 HTTP 请求通过外，其关联的其他服务例如数据库资源等也需要检测，我一般是添加一个 HelloWorld 方法，供客户端建立 SoapClient 以后调用。</p>
<p>这里仅仅使用以下伪代码，来模拟这个过程：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 服务客户端</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SoapClient</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 初始化客户端（伪）</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;name&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SoapClient</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 当前客户端名称</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Random Random = <span class="keyword">new</span> Random();</span><br><span class="line">    </span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 检测服务状态</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>服务是否可用<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">HelloWorld</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 随机休眠线程 模仿服务资源检测</span></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now:HH:mm:ss.fff&#125;</span>[<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId:<span class="number">00</span>&#125;</span>]@[<span class="subst">&#123;Name&#125;</span>]:开始连接服务&quot;</span>);</span><br><span class="line">        Thread.Sleep(Random.Next(<span class="number">500</span>,<span class="number">5000</span>));</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now:HH:mm:ss.fff&#125;</span>[<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId:<span class="number">00</span>&#125;</span>]@[<span class="subst">&#123;Name&#125;</span>]:服务资源检测结束&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 随机确认客户端连接状态</span></span><br><span class="line">        <span class="built_in">bool</span> result = Random.NextDouble() &gt; <span class="number">0.3</span>;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now:HH:mm:ss.fff&#125;</span>[<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId:<span class="number">00</span>&#125;</span>]@[<span class="subst">&#123;Name&#125;</span>]:服务状态为<span class="subst">&#123;result&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行检测效果：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SoapClient client = <span class="keyword">new</span> SoapClient(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">client.HelloWorld();</span><br></pre></td></tr></table></figure>
<h2 id="多个服务端"><a href="#多个服务端" class="headerlink" title="多个服务端"></a>多个服务端</h2><p>如果只有一个服务端，供我们连接，那其实无论创建多少个客户端其实都没有意义，所以我们这个方案主要是针对存在多个 Web 客户端，针对每个服务端初始化一个客户端进行连接，测试服务状态。</p>
<p>以下的代码，我们会模拟存在 5 台 Web 服务器，需要初始化 5 个客户端，分别测试连接状态，确认客户端建立的连接是否可用。</p>
<p>因为服务器所执行的业务是相同的，只需要一台服务器连接建立成功，即可返回。</p>
<p>不考虑多线程，我们一般可以使用如下代码进行测试：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] clientNames = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Client1&quot;</span>, <span class="string">&quot;Client2&quot;</span>, <span class="string">&quot;Client3&quot;</span>, <span class="string">&quot;Client4&quot;</span>, <span class="string">&quot;Client5&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">SoapClient client = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; clientNames.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    SoapClient testClient = <span class="keyword">new</span> SoapClient(clientNames[i]);</span><br><span class="line">    <span class="keyword">if</span> (testClient.HelloWorld())</span><br><span class="line">    &#123;</span><br><span class="line">        client = testClient;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;服务检测结束：连接&#123;0&#125;&#123;1&#125;&quot;</span>, client == <span class="literal">null</span> ? <span class="string">&quot;失败&quot;</span> : <span class="string">&quot;成功&quot;</span>, <span class="built_in">string</span>.IsNullOrEmpty(client?.Name) ? <span class="string">&quot;&quot;</span> : <span class="string">$&quot;服务名为<span class="subst">&#123;client.Name&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129153036_1580364437962.png" alt="20200129153036"></p>
<p>这里存在的问题自然是检测返回可用服务可能会很慢，排在前面的服务如果不可用，将会长时间等待。</p>
<h3 id="多线程建立连接"><a href="#多线程建立连接" class="headerlink" title="多线程建立连接"></a>多线程建立连接</h3><p>为解决单线程下，排列在前的不可用服务较多，影响服务连接速度，我们调整代码为多线程：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] clientNames = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Client1&quot;</span>, <span class="string">&quot;Client2&quot;</span>, <span class="string">&quot;Client3&quot;</span>, <span class="string">&quot;Client4&quot;</span>, <span class="string">&quot;Client5&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">List&lt;Task&lt;SoapClient&gt;&gt; clients = <span class="keyword">new</span> List&lt;Task&lt;SoapClient&gt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; clientNames.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = clientNames[i];</span><br><span class="line">    clients.Add(Task.Factory.StartNew(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        SoapClient client = <span class="keyword">new</span> SoapClient(name);</span><br><span class="line">        <span class="built_in">bool</span> connResult = client.HelloWorld();</span><br><span class="line">        <span class="keyword">return</span> connResult ? client : <span class="literal">null</span>;</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待所有异步任务执行完成 打印可用的服务</span></span><br><span class="line">Task.WaitAll(clients.ToArray());</span><br><span class="line">clients.ForEach(client =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (client.Result != <span class="literal">null</span>)</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;检测到可用服务：<span class="subst">&#123;client.Result.Name&#125;</span>&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>运行代码得到以下结果：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129175355_1580364437963.png" alt="20200129175355"></p>
<p>好像这样已经解决了我们前文提到的问题，通过异步建立服务连接，检测可用的服务。</p>
<p>但是其实以上例子并不是合理的方案，因为如果第一个服务是可用的，理论上我们很快就可以建立连接，返回可用的连接供程序使用。</p>
<p>但是以上多线程的版本，需要等待所有的连接都测试后，才会返回结果，如果后续的连接有错误，检测耗时较长，反而影响了这个过程的执行效率。</p>
<h2 id="多线程建立连接进阶"><a href="#多线程建立连接进阶" class="headerlink" title="多线程建立连接进阶"></a>多线程建立连接进阶</h2><p>解决上述多线程连接的问题其实很简单，前文提到 <code>WaitAll</code> 会等待所有的任务执行完成。但是其实我们还有一个 <code>WaitAny</code> 方法可以使用，该方法是任务队列中任意任务执行完成后返回。</p>
<p>那么我们可以将以上代码进行如下调整：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] clientNames = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Client1&quot;</span>, <span class="string">&quot;Client2&quot;</span>, <span class="string">&quot;Client3&quot;</span>, <span class="string">&quot;Client4&quot;</span>, <span class="string">&quot;Client5&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">List&lt;Task&lt;SoapClient&gt;&gt; clients = <span class="keyword">new</span> List&lt;Task&lt;SoapClient&gt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; clientNames.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = clientNames[i];</span><br><span class="line">    clients.Add(Task.Factory.StartNew(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        SoapClient client = <span class="keyword">new</span> SoapClient(name);</span><br><span class="line">        <span class="built_in">bool</span> connResult = client.HelloWorld();</span><br><span class="line">        <span class="keyword">return</span> connResult ? client : <span class="literal">null</span>;</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待任意任务执行完成，获取执行完成的任务返回</span></span><br><span class="line"><span class="built_in">int</span> index;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    index = Task.WaitAny(clients.ToArray());</span><br><span class="line">    <span class="keyword">if</span> (clients[index].Result != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;检测到可用服务：<span class="subst">&#123;clients[index].Result.Name&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;检测到一个不可用的服务。&quot;</span>);</span><br><span class="line">        clients.RemoveAt(index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (clients.Count &gt; <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<p>执行效果如下，可以看到我们可以快速的获取到可用的服务以便供客户端使用。</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/20200129175355_1580364437963.png" alt="20200129175355"></p>
<h2 id="多线程建立连接优化"><a href="#多线程建立连接优化" class="headerlink" title="多线程建立连接优化"></a>多线程建立连接优化</h2><p>接下来，我们还需要对以上代码进行优化，主要是在检测到可用服务以后，其他的检测任务就没必要再继续执行了，我们可以使用 Token 取消任务的执行。</p>
<p>但是这里我们就需要对之前用于服务连接的伪代码进行调整，主要是因为 <code>Thread.Sleep()</code> 方法是不可取消的，我们使用 <code>CancellationToken</code> 对执行该方法的代码进行标记，取消时将没有效果。</p>
<p>例如以下代码：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开始的示例使用 .NET Framework 4.0 框架</span></span><br><span class="line"><span class="keyword">using</span> (CancellationTokenSource source = <span class="keyword">new</span> CancellationTokenSource())</span><br><span class="line">&#123;</span><br><span class="line">    Task task = Task.Factory.StartNew(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务开始执行，需要等待 5 秒钟。&quot;</span>);</span><br><span class="line">        Thread.Sleep(<span class="number">5000</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务执行结束。&quot;</span>);</span><br><span class="line">    &#125;, source.Token);</span><br><span class="line"></span><br><span class="line">    Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">    source.Cancel();</span><br><span class="line">    task.Wait();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该段代码仍然会正常执行，并打印“任务执行结束”。</p>
<p>我们需要的效果应该是，当执行 <code>task.Wait()</code> 方法时，如果任务被取消，抛出 <code>TaskCanceledException</code> 异常，控制台无法打印出“任务执行结束”。</p>
<p>所以我们需要将 <code>Thread.Sleep()</code> 方法，调整为可取消的 <code>Task.Delay()</code> 方法。</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Task.Delay() 为 .NET Framework 4.5 框架的方法</span></span><br><span class="line"><span class="keyword">using</span> (CancellationTokenSource source = <span class="keyword">new</span> CancellationTokenSource())</span><br><span class="line">&#123;</span><br><span class="line">    Task task = Task.Run(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务开始执行，需要等待 5 秒钟。&quot;</span>);</span><br><span class="line">        Task.Delay(<span class="number">5000</span>).Wait(source.Token);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务执行结束。&quot;</span>);</span><br><span class="line">    &#125;, source.Token);</span><br><span class="line"></span><br><span class="line">    Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">    source.Cancel();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        task.Wait();</span><br><span class="line">    &#125;</span><br><span class="line">    catch (AggregateException ae)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (Exception e <span class="keyword">in</span> ae.InnerExceptions)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">is</span> TaskCanceledException)</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;执行的任务被取消！&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;其他异常：&quot;</span> + e.GetType().Name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>基于此我们需要调整我们 <code>SoapClient</code> 中的 <code>HelloWorld</code> 方法：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 检测服务状态</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>服务是否可用<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">HelloWorld</span>(<span class="params">CancellationToken cancellationToken</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 随机休眠线程 模仿服务资源检测</span></span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now:HH:mm:ss.fff&#125;</span>[<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId:<span class="number">00</span>&#125;</span>]@[<span class="subst">&#123;Name&#125;</span>]:开始连接服务&quot;</span>);</span><br><span class="line">    Task.Delay(Random.Next(<span class="number">500</span>, <span class="number">5000</span>)).Wait(cancellationToken);</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now:HH:mm:ss.fff&#125;</span>[<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId:<span class="number">00</span>&#125;</span>]@[<span class="subst">&#123;Name&#125;</span>]:服务资源检测结束&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 随机确认客户端连接状态</span></span><br><span class="line">    <span class="built_in">bool</span> result = Random.NextDouble() &gt; <span class="number">0.3</span>;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now:HH:mm:ss.fff&#125;</span>[<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId:<span class="number">00</span>&#125;</span>]@[<span class="subst">&#123;Name&#125;</span>]:服务状态为<span class="subst">&#123;result&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么测试连接的代码段则如下：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] clientNames = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Client1&quot;</span>, <span class="string">&quot;Client2&quot;</span>, <span class="string">&quot;Client3&quot;</span>, <span class="string">&quot;Client4&quot;</span>, <span class="string">&quot;Client5&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">List&lt;Task&lt;SoapClient&gt;&gt; tasks = <span class="keyword">new</span> List&lt;Task&lt;SoapClient&gt;&gt;();</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> cancelTokenSource = <span class="keyword">new</span> CancellationTokenSource())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; clientNames.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> name = clientNames[i];</span><br><span class="line">        tasks.Add(Task.Factory.StartNew(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            SoapClient client = <span class="keyword">new</span> SoapClient(name);</span><br><span class="line">            <span class="built_in">bool</span> connResult = client.HelloWorld(cancelTokenSource.Token);</span><br><span class="line">            <span class="keyword">return</span> connResult ? client : <span class="literal">null</span>;</span><br><span class="line">        &#125;, cancelTokenSource.Token));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待任意任务执行完成，获取执行完成的任务返回</span></span><br><span class="line">    <span class="built_in">int</span> index;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        index = Task.WaitAny(tasks.ToArray());</span><br><span class="line">        <span class="keyword">if</span> (tasks[index].Result != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cancelTokenSource.Cancel();</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;检测到可用服务：<span class="subst">&#123;tasks[index].Result.Name&#125;</span>，取消其他测试任务的执行&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;检测到一个不可用的服务。&quot;</span>);</span><br><span class="line">            tasks[index].Dispose();</span><br><span class="line">            tasks.RemoveAt(index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (tasks.Count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待所有任务执行结束</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Task.WaitAll(tasks.ToArray());</span><br><span class="line">    &#125;</span><br><span class="line">    catch (AggregateException ae)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (Exception e <span class="keyword">in</span> ae.InnerExceptions)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">is</span> TaskCanceledException)</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;执行的任务被取消！&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;其他异常：&quot;</span> + e.GetType().Name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行效果如下：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/20200130113248_1580364440220.png" alt="20200130113248"></p>
<h2 id="WebService-服务检测方法"><a href="#WebService-服务检测方法" class="headerlink" title="WebService 服务检测方法"></a>WebService 服务检测方法</h2><p>基于以上内容的测试，我们可以尝试建立一个 <code>LISWebServiceSoapClient</code> 的 WebService 客户端，用于与服务器进行通信，该方法内容如下：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 尝试建立服务连接</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;urls&quot;&gt;</span>服务地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>是否成功与服务建立连接<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> LISWebServiceSoapClient <span class="title">TryConnectService</span>(<span class="params"><span class="built_in">string</span>[] urls</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (urls == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="string">&quot;服务地址不能为空&quot;</span>, <span class="keyword">nameof</span>(urls));</span><br><span class="line">    <span class="keyword">if</span> (urls.Length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;服务地址没有内容&quot;</span>, <span class="keyword">nameof</span>(urls));</span><br><span class="line"></span><br><span class="line">    LISWebServiceSoapClient client = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 异步检查可用连接提高查询速度</span></span><br><span class="line">    List&lt;Task&lt;LISWebServiceSoapClient&gt;&gt; tasks = <span class="keyword">new</span> List&lt;Task&lt;LISWebServiceSoapClient&gt;&gt;();</span><br><span class="line">    <span class="keyword">using</span> (CancellationTokenSource source = <span class="keyword">new</span> CancellationTokenSource())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; urls.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> url = urls[i];</span><br><span class="line">            tasks.Add(Task.Factory.StartNew(() =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 使用配置项初始化服务 并尝试调用测试连接的方法</span></span><br><span class="line">                LISWebServiceSoapClient current = <span class="keyword">new</span> LISWebServiceSoapClient(<span class="keyword">new</span> BasicHttpBinding(), <span class="keyword">new</span> EndpointAddress(url));</span><br><span class="line">                current.HelloWorld();</span><br><span class="line">                <span class="keyword">return</span> current;</span><br><span class="line">            &#125;, source.Token));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待任务返回 设置超时时间为 15s</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; tasks.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> index = Task.WaitAny(tasks.ToArray(), <span class="number">15000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 超时</span></span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取成功初始化的任务</span></span><br><span class="line">            <span class="keyword">if</span> (index &gt; <span class="number">-1</span> &amp;&amp; tasks[index].Status == TaskStatus.RanToCompletion)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 有返回就取消其他任务</span></span><br><span class="line">                source.Cancel();</span><br><span class="line">                client = tasks[index].Result;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 非成功初始化的从集合中移除</span></span><br><span class="line">            tasks.RemoveAt(index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> client;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考：</p>
<ul>
<li>MSDN：<a target="_blank" rel="noopener" href="https://docs.microsoft.com/zh-cn/dotnet/api/system.threading.cancellationtokensource?view=netframework-4.8">CancellationTokenSource 类</a></li>
<li>MSDN：<a target="_blank" rel="noopener" href="https://docs.microsoft.com/zh-cn/dotnet/api/system.threading.tasks.task.delay?view=netframework-4.8">Task.Delay 方法</a></li>
</ul>
</blockquote>

      
    </div>
    <footer class="article-footer">
      <a data-url="http://example.com/multithread-detection-of-available-web-services" data-id="cklbzl1bb002ozonudhhghohk" data-title="多线程检测可用的 Web 服务" class="article-share-link">分享</a>
      
      
      
  <ul class="article-tag-list" itemprop="keywords"><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/WCF/" rel="tag">WCF</a></li><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/WebService/" rel="tag">WebService</a></li><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/" rel="tag">多线程</a></li></ul>

    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/csharp-foundation-constructor-destructor-deconstruct" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">前一篇</strong>
      <div class="article-nav-title">
        
          C# 基础：构造函数、析构函数、解构函数
        
      </div>
    </a>
  
  
    <a href="/awsl-those-incomprehensible-english-abbreviations-on-github" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">后一篇</strong>
      <div class="article-nav-title">阿伟死了，GitHub 上那些难以理解的英语缩写</div>
    </a>
  
</nav>

  
</article>


</section>
        
          <aside id="sidebar">
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">分类</h3>
    <div class="widget">
      <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/">开发</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/C/">C#</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/C/ASP-NET-Core/">ASP.NET Core</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/C/WPF/">WPF</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E4%B8%9A%E5%8A%A1/">业务</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/">前端</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E5%9F%BA%E7%A1%80/">基础</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E5%B7%A5%E5%85%B7/">工具</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/">MySQL</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle/">Oracle</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL/">PostgreSQL</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQLite/">SQLite</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%9D%82%E8%B0%88/">杂谈</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/">操作系统</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/MacOS/">MacOS</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%B7%A5%E5%85%B7/">工具</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E4%BB%B6/">软件</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/">日志</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/%E5%85%AC%E5%91%8A/">公告</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/%E5%BC%80%E7%AE%B1/">开箱</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/%E6%9D%82%E8%B0%88/">杂谈</a></li></ul></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签</h3>
    <div class="widget">
      <ul class="tag-list" itemprop="keywords"><li class="tag-list-item"><a class="tag-list-link" href="/tags/NET-Standard/" rel="tag">.NET Standard</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/AOP/" rel="tag">AOP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ASCII/" rel="tag">ASCII</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ActiveX/" rel="tag">ActiveX</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Attribute/" rel="tag">Attribute</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Autofac/" rel="tag">Autofac</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/BFG/" rel="tag">BFG</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CCProxy/" rel="tag">CCProxy</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Chrome/" rel="tag">Chrome</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/DBeaver/" rel="tag">DBeaver</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Expression/" rel="tag">Expression</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Fody/" rel="tag">Fody</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/GDI/" rel="tag">GDI</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Git/" rel="tag">Git</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/GitHub/" rel="tag">GitHub</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Gitea/" rel="tag">Gitea</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/HIS/" rel="tag">HIS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/HongYang/" rel="tag">HongYang</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/IDE/" rel="tag">IDE</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/IE/" rel="tag">IE</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/JavaScript/" rel="tag">JavaScript</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Jint/" rel="tag">Jint</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Json/" rel="tag">Json</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Kindle/" rel="tag">Kindle</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/LIS/" rel="tag">LIS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/LODOP/" rel="tag">LODOP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/MVC/" rel="tag">MVC</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/MacOS/" rel="tag">MacOS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Math/" rel="tag">Math</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/NHibernate/" rel="tag">NHibernate</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Nexus3/" rel="tag">Nexus3</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Note/" rel="tag">Note</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/NuGet/" rel="tag">NuGet</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/OOP/" rel="tag">OOP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Oracle/" rel="tag">Oracle</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/SOA/" rel="tag">SOA</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/SSH/" rel="tag">SSH</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Shell/" rel="tag">Shell</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/TCP/" rel="tag">TCP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Telegram/" rel="tag">Telegram</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/TreeView/" rel="tag">TreeView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Tuple/" rel="tag">Tuple</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UI/" rel="tag">UI</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UML/" rel="tag">UML</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Unity/" rel="tag">Unity</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/VS/" rel="tag">VS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/VSCode/" rel="tag">VSCode</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ValueTuple/" rel="tag">ValueTuple</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WCF/" rel="tag">WCF</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WPF/" rel="tag">WPF</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WebApi/" rel="tag">WebApi</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WebService/" rel="tag">WebService</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WinForm/" rel="tag">WinForm</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Windows/" rel="tag">Windows</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Windows-XP/" rel="tag">Windows XP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Xml/" rel="tag">Xml</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/decimal/" rel="tag">decimal</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/frp/" rel="tag">frp</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/jdbc/" rel="tag">jdbc</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/mstsc/" rel="tag">mstsc</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E4%B8%B2%E5%8F%A3/" rel="tag">串口</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E4%BB%A3%E7%90%86/" rel="tag">代理</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/" rel="tag">依赖注入</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%85%83%E7%BB%84/" rel="tag">元组</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%8A%A0%E5%AF%86/" rel="tag">加密</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93/" rel="tag">动态链接库</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%8F%8D%E5%B0%84/" rel="tag">反射</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/" rel="tag">多线程</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%A7%94%E6%89%98/" rel="tag">委托</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%B7%A5%E5%85%B7/" rel="tag">工具</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%B9%B4%E9%BE%84/" rel="tag">年龄</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%BA%8F%E5%88%97%E5%8C%96/" rel="tag">序列化</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%BC%83%E5%85%83/" rel="tag">弃元</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%89%93%E5%8D%B0/" rel="tag">打印</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%97%A5%E5%BF%97/" rel="tag">日志</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/" rel="tag">构造函数</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/" rel="tag">析构函数</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%9E%9A%E4%B8%BE/" rel="tag">枚举</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%AD%A3%E5%88%99/" rel="tag">正则</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%B3%9B%E5%9E%8B/" rel="tag">泛型</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E7%88%AC%E8%99%AB/" rel="tag">爬虫</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E7%91%9E%E7%BE%8E/" rel="tag">瑞美</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/" rel="tag">虚拟机</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%A1%80%E7%90%83%E4%BB%AA/" rel="tag">血球仪</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%A7%A3%E6%9E%84%E5%87%BD%E6%95%B0/" rel="tag">解构函数</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="tag">设计模式</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%B0%83%E8%AF%95/" rel="tag">调试</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%B4%9D%E5%85%8B%E6%9B%BC/" rel="tag">贝克曼</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%BB%E5%8D%A1/" rel="tag">身份证读卡</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%BD%AF%E4%BB%B6/" rel="tag">软件</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%BF%9C%E7%A8%8B/" rel="tag">远程</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E9%97%AA%E9%80%80/" rel="tag">闪退</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E9%A1%B9%E7%9B%AE/" rel="tag">项目</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签云</h3>
    <div class="widget tagcloud">
      <a href="/tags/NET-Standard/" style="font-size: 10px;">.NET Standard</a> <a href="/tags/AOP/" style="font-size: 10px;">AOP</a> <a href="/tags/ASCII/" style="font-size: 10px;">ASCII</a> <a href="/tags/ActiveX/" style="font-size: 10px;">ActiveX</a> <a href="/tags/Attribute/" style="font-size: 10px;">Attribute</a> <a href="/tags/Autofac/" style="font-size: 10px;">Autofac</a> <a href="/tags/BFG/" style="font-size: 10px;">BFG</a> <a href="/tags/CCProxy/" style="font-size: 10px;">CCProxy</a> <a href="/tags/Chrome/" style="font-size: 10px;">Chrome</a> <a href="/tags/DBeaver/" style="font-size: 12.5px;">DBeaver</a> <a href="/tags/Expression/" style="font-size: 10px;">Expression</a> <a href="/tags/Fody/" style="font-size: 10px;">Fody</a> <a href="/tags/GDI/" style="font-size: 10px;">GDI</a> <a href="/tags/Git/" style="font-size: 12.5px;">Git</a> <a href="/tags/GitHub/" style="font-size: 12.5px;">GitHub</a> <a href="/tags/Gitea/" style="font-size: 10px;">Gitea</a> <a href="/tags/HIS/" style="font-size: 12.5px;">HIS</a> <a href="/tags/HongYang/" style="font-size: 10px;">HongYang</a> <a href="/tags/IDE/" style="font-size: 10px;">IDE</a> <a href="/tags/IE/" style="font-size: 10px;">IE</a> <a href="/tags/JavaScript/" style="font-size: 12.5px;">JavaScript</a> <a href="/tags/Jint/" style="font-size: 12.5px;">Jint</a> <a href="/tags/Json/" style="font-size: 10px;">Json</a> <a href="/tags/Kindle/" style="font-size: 10px;">Kindle</a> <a href="/tags/LIS/" style="font-size: 15px;">LIS</a> <a href="/tags/LODOP/" style="font-size: 10px;">LODOP</a> <a href="/tags/MVC/" style="font-size: 10px;">MVC</a> <a href="/tags/MacOS/" style="font-size: 10px;">MacOS</a> <a href="/tags/Math/" style="font-size: 10px;">Math</a> <a href="/tags/NHibernate/" style="font-size: 10px;">NHibernate</a> <a href="/tags/Nexus3/" style="font-size: 10px;">Nexus3</a> <a href="/tags/Note/" style="font-size: 10px;">Note</a> <a href="/tags/NuGet/" style="font-size: 10px;">NuGet</a> <a href="/tags/OOP/" style="font-size: 10px;">OOP</a> <a href="/tags/Oracle/" style="font-size: 10px;">Oracle</a> <a href="/tags/SOA/" style="font-size: 17.5px;">SOA</a> <a href="/tags/SSH/" style="font-size: 10px;">SSH</a> <a href="/tags/Shell/" style="font-size: 10px;">Shell</a> <a href="/tags/TCP/" style="font-size: 10px;">TCP</a> <a href="/tags/Telegram/" style="font-size: 10px;">Telegram</a> <a href="/tags/TreeView/" style="font-size: 10px;">TreeView</a> <a href="/tags/Tuple/" style="font-size: 10px;">Tuple</a> <a href="/tags/UI/" style="font-size: 10px;">UI</a> <a href="/tags/UML/" style="font-size: 10px;">UML</a> <a href="/tags/Unity/" style="font-size: 10px;">Unity</a> <a href="/tags/VS/" style="font-size: 10px;">VS</a> <a href="/tags/VSCode/" style="font-size: 10px;">VSCode</a> <a href="/tags/ValueTuple/" style="font-size: 10px;">ValueTuple</a> <a href="/tags/WCF/" style="font-size: 12.5px;">WCF</a> <a href="/tags/WPF/" style="font-size: 10px;">WPF</a> <a href="/tags/WebApi/" style="font-size: 15px;">WebApi</a> <a href="/tags/WebService/" style="font-size: 15px;">WebService</a> <a href="/tags/WinForm/" style="font-size: 10px;">WinForm</a> <a href="/tags/Windows/" style="font-size: 10px;">Windows</a> <a href="/tags/Windows-XP/" style="font-size: 12.5px;">Windows XP</a> <a href="/tags/Xml/" style="font-size: 10px;">Xml</a> <a href="/tags/decimal/" style="font-size: 10px;">decimal</a> <a href="/tags/frp/" style="font-size: 10px;">frp</a> <a href="/tags/jdbc/" style="font-size: 10px;">jdbc</a> <a href="/tags/mstsc/" style="font-size: 10px;">mstsc</a> <a href="/tags/%E4%B8%B2%E5%8F%A3/" style="font-size: 10px;">串口</a> <a href="/tags/%E4%BB%A3%E7%90%86/" style="font-size: 12.5px;">代理</a> <a href="/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/" style="font-size: 10px;">依赖注入</a> <a href="/tags/%E5%85%83%E7%BB%84/" style="font-size: 12.5px;">元组</a> <a href="/tags/%E5%8A%A0%E5%AF%86/" style="font-size: 10px;">加密</a> <a href="/tags/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93/" style="font-size: 10px;">动态链接库</a> <a href="/tags/%E5%8F%8D%E5%B0%84/" style="font-size: 10px;">反射</a> <a href="/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/" style="font-size: 20px;">多线程</a> <a href="/tags/%E5%A7%94%E6%89%98/" style="font-size: 10px;">委托</a> <a href="/tags/%E5%B7%A5%E5%85%B7/" style="font-size: 10px;">工具</a> <a href="/tags/%E5%B9%B4%E9%BE%84/" style="font-size: 10px;">年龄</a> <a href="/tags/%E5%BA%8F%E5%88%97%E5%8C%96/" style="font-size: 10px;">序列化</a> <a href="/tags/%E5%BC%83%E5%85%83/" style="font-size: 10px;">弃元</a> <a href="/tags/%E6%89%93%E5%8D%B0/" style="font-size: 10px;">打印</a> <a href="/tags/%E6%97%A5%E5%BF%97/" style="font-size: 10px;">日志</a> <a href="/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/" style="font-size: 10px;">构造函数</a> <a href="/tags/%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/" style="font-size: 10px;">析构函数</a> <a href="/tags/%E6%9E%9A%E4%B8%BE/" style="font-size: 10px;">枚举</a> <a href="/tags/%E6%AD%A3%E5%88%99/" style="font-size: 15px;">正则</a> <a href="/tags/%E6%B3%9B%E5%9E%8B/" style="font-size: 12.5px;">泛型</a> <a href="/tags/%E7%88%AC%E8%99%AB/" style="font-size: 10px;">爬虫</a> <a href="/tags/%E7%91%9E%E7%BE%8E/" style="font-size: 10px;">瑞美</a> <a href="/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/" style="font-size: 12.5px;">虚拟机</a> <a href="/tags/%E8%A1%80%E7%90%83%E4%BB%AA/" style="font-size: 10px;">血球仪</a> <a href="/tags/%E8%A7%A3%E6%9E%84%E5%87%BD%E6%95%B0/" style="font-size: 10px;">解构函数</a> <a href="/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" style="font-size: 12.5px;">设计模式</a> <a href="/tags/%E8%B0%83%E8%AF%95/" style="font-size: 10px;">调试</a> <a href="/tags/%E8%B4%9D%E5%85%8B%E6%9B%BC/" style="font-size: 10px;">贝克曼</a> <a href="/tags/%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%BB%E5%8D%A1/" style="font-size: 10px;">身份证读卡</a> <a href="/tags/%E8%BD%AF%E4%BB%B6/" style="font-size: 10px;">软件</a> <a href="/tags/%E8%BF%9C%E7%A8%8B/" style="font-size: 10px;">远程</a> <a href="/tags/%E9%97%AA%E9%80%80/" style="font-size: 10px;">闪退</a> <a href="/tags/%E9%A1%B9%E7%9B%AE/" style="font-size: 10px;">项目</a>
    </div>
  </div>

  
    
  <div class="widget-wrap">
    <h3 class="widget-title">归档</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/12/">十二月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/11/">十一月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/09/">九月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/05/">五月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/04/">四月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/03/">三月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/02/">二月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/01/">一月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/12/">十二月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/11/">十一月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/10/">十月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/09/">九月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/08/">八月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/07/">七月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/05/">五月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/04/">四月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/03/">三月 2019</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">最新文章</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/csharp-expression-script-evaluation-problems">C# 中表达式计算问题</a>
          </li>
        
          <li>
            <a href="/aspnet-core-001-source-code-compilation-and-debugging">ASP.NET Core - 001 源码编译与调试</a>
          </li>
        
          <li>
            <a href="/aspnet-core-000-development-environment-configuration">ASP.NET Core - 000 开发环境配置</a>
          </li>
        
          <li>
            <a href="/dotnet-core-migration-web-service">迁移 Web Service 项目到 .NET Core</a>
          </li>
        
          <li>
            <a href="/his-development-environment">环境部署</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      
      &copy; 2021 hd2y<br>
      Powered by <a href="https://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>

    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    


<script src="/js/jquery-3.4.1.min.js"></script>



  
<script src="/fancybox/jquery.fancybox.min.js"></script>




<script src="/js/script.js"></script>





  </div>
</body>
</html>