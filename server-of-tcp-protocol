<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  
  
  <title>TCP协议之服务端 | 华灯</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="之前介绍过串口通讯，相对来说串口通讯是比较简单的，不用关心另外一端的连接状态，只需要打开串口，监听接收事件即可。发送也很简单，一个Write方法控制。 但是串口的问题也很明显，我们无法得知另外一端是否可用，只能通过通讯协议里进行指定，设置心跳包或者指定接收后进行响应。打开监听简单，但是维持监听判断监听状态就相对麻烦一些。 对于开发来说，Socket通信（网口）要麻烦一些，因为需要了解TCP&#x2F;UPD">
<meta property="og:type" content="article">
<meta property="og:title" content="TCP协议之服务端">
<meta property="og:url" content="http://example.com/server-of-tcp-protocol">
<meta property="og:site_name" content="华灯">
<meta property="og:description" content="之前介绍过串口通讯，相对来说串口通讯是比较简单的，不用关心另外一端的连接状态，只需要打开串口，监听接收事件即可。发送也很简单，一个Write方法控制。 但是串口的问题也很明显，我们无法得知另外一端是否可用，只能通过通讯协议里进行指定，设置心跳包或者指定接收后进行响应。打开监听简单，但是维持监听判断监听状态就相对麻烦一些。 对于开发来说，Socket通信（网口）要麻烦一些，因为需要了解TCP&#x2F;UPD">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver1_1562747097761.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver11_1562747097860.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver2_1562747097762.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver3_1562747097762.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver6_1562747097787.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver7_1562747097800.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver8_1562747097819.png">
<meta property="og:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver9_1562747097836.png">
<meta property="article:published_time" content="2019-05-29T08:14:00.000Z">
<meta property="article:modified_time" content="2019-07-10T08:39:42.000Z">
<meta property="article:author" content="hd2y">
<meta property="article:tag" content="TCP">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver1_1562747097761.png">
  
    <link rel="alternate" href="/atom.xml" title="华灯" type="application/atom+xml">
  
  
    <link rel="shortcut icon" href="/favicon.png">
  
  
    
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/typeface-source-code-pro@0.0.71/index.min.css">

  
  
<link rel="stylesheet" href="/css/style.css">

  
    
<link rel="stylesheet" href="/fancybox/jquery.fancybox.min.css">

  
<meta name="generator" content="Hexo 5.3.0"></head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">华灯</a>
      </h1>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS 订阅"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="搜索"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="搜索"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://example.com"></form>
      </div>
    </div>
  </div>
</header>

      <div class="outer">
        <section id="main"><article id="post-server-of-tcp-protocol" class="h-entry article article-type-post" itemprop="blogPost" itemscope itemtype="https://schema.org/BlogPosting">
  <div class="article-meta">
    <a href="/server-of-tcp-protocol" class="article-date">
  <time class="dt-published" datetime="2019-05-29T08:14:00.000Z" itemprop="datePublished">2019-05-29</time>
</a>
    
  <div class="article-category">
    <a class="article-category-link" href="/categories/%E5%BC%80%E5%8F%91/">开发</a>►<a class="article-category-link" href="/categories/%E5%BC%80%E5%8F%91/C/">C#</a>
  </div>

  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="p-name article-title" itemprop="headline name">
      TCP协议之服务端
    </h1>
  

      </header>
    
    <div class="e-content article-entry" itemprop="articleBody">
      
        <p>之前介绍过串口通讯，相对来说串口通讯是比较简单的，不用关心另外一端的连接状态，只需要打开串口，监听接收事件即可。发送也很简单，一个<code>Write</code>方法控制。</p>
<p>但是串口的问题也很明显，我们无法得知另外一端是否可用，只能通过通讯协议里进行指定，设置心跳包或者指定接收后进行响应。打开监听简单，但是维持监听判断监听状态就相对麻烦一些。</p>
<p>对于开发来说，<code>Socket</code>通信（网口）要麻烦一些，因为需要了解<code>TCP/UPD</code>协议，还区分了服务端与客户端，但是硬件连入局域网就可以通信，所以使用<code>Socket</code>通信也是一种主流的解决方案。</p>
<p>关于基础的知识比如什么是<code>Socket</code>通信，什么是<code>TCP</code>协议，这里也不做展开，有兴趣的可以自己搜索相关资料了解。</p>
<h2 id="Socket通信调试工具"><a href="#Socket通信调试工具" class="headerlink" title="Socket通信调试工具"></a><code>Socket</code>通信调试工具</h2><p>个人使用较多的是<code>TCP/UDP Socket 调试工具</code>。</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver1_1562747097761.png" alt="tcpserver1"></p>
<p>使用中可能存在的一些问题：</p>
<ol>
<li>偶发关闭了另外一端，会导致调试工具异常；</li>
<li>编码默认本地字符集，所以经常导致中文乱码，需要收集16进制自行解析编码；</li>
<li>在收集数据的时候，接收区会添加接收的时间，解析时需要我们自己将这些字符替换掉；</li>
</ol>
<p>当然这些基本也不会影响我们的调试工作。</p>
<h2 id="单客户端"><a href="#单客户端" class="headerlink" title="单客户端"></a>单客户端</h2><p>首先我们使用调试工具进行模拟，调试工具中创建一个<code>TCP Server</code>，监听端口根据自己需求设置。因为我们没有监听指定端口的需求，只是进行模拟测试，我们这里设置监听<code>5555</code>端口进行测试：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver11_1562747097860.png" alt="tcpserver11"></p>
<p>如上图，创建的<code>TCP Server</code>自动启动了监听。</p>
<p>服务端创建成功，我们就需要创建一个客户端进行连接，来进行数据的通讯，同样的我们选择<code>TCP Client</code>进行创建，并连接到本机的<code>5555</code>端口：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver2_1562747097762.png" alt="tcpserver2"></p>
<p>这时我们就可以点击TCP Client下打开的客户端向服务端发送消息，或选择<code>TCP Server</code>服务端下连接的客户端，向指定客户端发送消息：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver3_1562747097762.png" alt="tcpserver3"></p>
<p>那么，我们应该怎样在程序中打开服务端，监听客户端请求呢？可以参考以下代码：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SocketTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TcpServerTest.Test();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">TcpServerTest</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 服务端地址默认本地</span></span><br><span class="line">            IPAddress address = IPAddress.Parse(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">            <span class="comment">// 提醒用户输入要监听的端口</span></span><br><span class="line">            Console.Write(<span class="string">&quot;请输入您要监听的端口：&quot;</span>);</span><br><span class="line">            <span class="built_in">string</span> input = Console.ReadLine();</span><br><span class="line">            <span class="built_in">int</span> port;</span><br><span class="line">            <span class="keyword">while</span> (!<span class="built_in">int</span>.TryParse(input, <span class="keyword">out</span> port))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(<span class="string">&quot;您输入的端口错误，请重新输入：&quot;</span>);</span><br><span class="line">                input = Console.ReadLine();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 创建并打开监听</span></span><br><span class="line">                TcpListener listener = <span class="keyword">new</span> TcpListener(address, port);</span><br><span class="line">                listener.Start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                ConsoleLogger.Info(<span class="string">$&quot;启用服务端 <span class="subst">&#123;listener.Server.LocalEndPoint&#125;</span> 成功，等待客户端连接。&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 等待客户端的连接请求</span></span><br><span class="line">                TcpClient client = listener.AcceptTcpClient();</span><br><span class="line"></span><br><span class="line">                ConsoleLogger.Info(<span class="string">$&quot;客户端连接成功：<span class="subst">&#123;client.Client.RemoteEndPoint.ToString()&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 建立与客户端的数据流</span></span><br><span class="line">                <span class="keyword">using</span> NetworkStream stream = client.GetStream();</span><br><span class="line">                <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];<span class="comment">//设置缓存长度</span></span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">int</span> length = stream.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                        <span class="keyword">if</span> (length &gt; <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ConsoleLogger.Info(<span class="string">$&quot;[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]接收到数据: <span class="subst">&#123;Console.InputEncoding.GetString(buffer, <span class="number">0</span>, length)&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="comment">// 回发接收到的消息给客户端</span></span><br><span class="line">                            client.Client.Send(buffer, <span class="number">0</span>, length, SocketFlags.None);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            ConsoleLogger.Info(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]关闭&quot;</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    catch (Exception exc)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ConsoleLogger.Error(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]引发未处理异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception exc)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleLogger.Error(<span class="string">$&quot;TCP服务端测试出现了未经处理的异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ConsoleLogger.Info(<span class="string">&quot;测试结束&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ConsoleLogger</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">object</span> sync = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Error</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.White;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.Red;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>)&#125;</span> Error: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Info</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.Black;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.White;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>)&#125;</span>  Info: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如上例子展示了一个服务端的创建与监听过程，连接成功后如果接收到客户端的消息，“复读”该消息发送给客户端。</p>
<p>我们可以进行测试，首先运行项目，在控制台创建服务端，并开启监听。服务端创建成功后，使用Socket的调试工具创建一个TCP客户端，与服务端进行通讯测试，结束后断开连接：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver6_1562747097787.png" alt="tcpserver6"></p>
<h2 id="多客户端连接"><a href="#多客户端连接" class="headerlink" title="多客户端连接"></a>多客户端连接</h2><p>如上例子正如测试结果一样，只能接受一个客户端的连接，当该客户端连接成功后，其他客户端如果再申请与服务端进行连接，虽然不会被拒绝，但是发送消息将无法获得响应。</p>
<p>关于如何建立与多个客户端连接，这里有两种方案。</p>
<h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>使用<code>while</code>循环，配合<code>AcceptTcpClient</code>方法，不停的监听来自客户端的请求。</p>
<p>循环中，一旦客户端连接成功，开启一个线程处理服务端与客户端的数据交互。然后循环继续，等待下一个客户端连接。</p>
<p>这里我们将测试用例中的<code>Test</code>方法进行改写：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 服务端地址默认本地</span></span><br><span class="line">    IPAddress address = IPAddress.Parse(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">    <span class="comment">// 提醒用户输入要监听的端口</span></span><br><span class="line">    Console.Write(<span class="string">&quot;请输入您要监听的端口：&quot;</span>);</span><br><span class="line">    <span class="built_in">string</span> input = Console.ReadLine();</span><br><span class="line">    <span class="built_in">int</span> port;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">int</span>.TryParse(input, <span class="keyword">out</span> port))</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(<span class="string">&quot;您输入的端口错误，请重新输入：&quot;</span>);</span><br><span class="line">        input = Console.ReadLine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建并打开监听</span></span><br><span class="line">        TcpListener listener = <span class="keyword">new</span> TcpListener(address, port);</span><br><span class="line">        listener.Start();</span><br><span class="line"></span><br><span class="line">        ConsoleLogger.Info(<span class="string">$&quot;启用服务端 <span class="subst">&#123;listener.Server.LocalEndPoint&#125;</span> 成功，等待客户端连接。&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待客户端的连接请求</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            TcpClient client = listener.AcceptTcpClient();</span><br><span class="line">            ConsoleLogger.Info(<span class="string">$&quot;客户端连接成功：<span class="subst">&#123;client.Client.RemoteEndPoint.ToString()&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 建立与客户端的数据流</span></span><br><span class="line">            Task.Factory.StartNew(() =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> NetworkStream stream = client.GetStream();</span><br><span class="line">                <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];<span class="comment">//设置缓存长度</span></span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">int</span> length = stream.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                        <span class="keyword">if</span> (length &gt; <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ConsoleLogger.Info(<span class="string">$&quot;[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]接收到数据: <span class="subst">&#123;Console.InputEncoding.GetString(buffer, <span class="number">0</span>, length)&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="comment">// 回发接收到的消息给客户端</span></span><br><span class="line">                            client.Client.Send(buffer, <span class="number">0</span>, length, SocketFlags.None);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            ConsoleLogger.Info(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]关闭&quot;</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    catch (Exception exc)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ConsoleLogger.Error(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]引发未处理异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception exc)</span><br><span class="line">    &#123;</span><br><span class="line">        ConsoleLogger.Error(<span class="string">$&quot;TCP服务端测试出现了未经处理的异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ConsoleLogger.Info(<span class="string">&quot;测试结束&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试效果如下：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver7_1562747097800.png" alt="tcpserver7"></p>
<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>递归本质上和循环类似，其利用的是异步等待TCP客户端连接方法<code>BeginAcceptTcpClient</code>的回调。</p>
<p>我们可以在回调中，使用<code>EndAcceptTcpClient</code>来异步的接受传入的连接，并创建客户端实例。而创建成功后，我们可以继续调用回调函数，来异步的接收下一个客户端的连接请求。</p>
<p>下面例子将回调函数写为匿名函数，实际开发中也可以使用普通函数：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 服务端地址默认本地</span></span><br><span class="line">    IPAddress address = IPAddress.Parse(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">    <span class="comment">// 提醒用户输入要监听的端口</span></span><br><span class="line">    Console.Write(<span class="string">&quot;请输入您要监听的端口：&quot;</span>);</span><br><span class="line">    <span class="built_in">string</span> input = Console.ReadLine();</span><br><span class="line">    <span class="built_in">int</span> port;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">int</span>.TryParse(input, <span class="keyword">out</span> port))</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(<span class="string">&quot;您输入的端口错误，请重新输入：&quot;</span>);</span><br><span class="line">        input = Console.ReadLine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建并打开监听</span></span><br><span class="line">        TcpListener listener = <span class="keyword">new</span> TcpListener(address, port);</span><br><span class="line">        listener.Start();</span><br><span class="line"></span><br><span class="line">        ConsoleLogger.Info(<span class="string">$&quot;启用服务端 <span class="subst">&#123;listener.Server.LocalEndPoint&#125;</span> 成功，等待客户端连接。&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 异步等待客户端的连接请求的回调</span></span><br><span class="line">        AsyncCallback callback = <span class="literal">null</span>;</span><br><span class="line">        callback = <span class="keyword">new</span> AsyncCallback((asyncResult) =&gt; </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 因为没有使用函数而是使用匿名方法 这里也可以直接用可以访问到的局部变量listener</span></span><br><span class="line">            <span class="keyword">if</span> (asyncResult.AsyncState <span class="keyword">is</span> TcpListener tcpListener)</span><br><span class="line">            &#123;</span><br><span class="line">                TcpClient client = tcpListener.EndAcceptTcpClient(asyncResult);</span><br><span class="line">                ConsoleLogger.Info(<span class="string">$&quot;客户端连接成功：<span class="subst">&#123;client.Client.RemoteEndPoint.ToString()&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 建立与客户端的数据流</span></span><br><span class="line">                Task.Factory.StartNew(() =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">using</span> NetworkStream stream = client.GetStream();</span><br><span class="line">                    <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];<span class="comment">//设置缓存长度</span></span><br><span class="line">                    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">try</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">int</span> length = stream.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                            <span class="keyword">if</span> (length &gt; <span class="number">0</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                ConsoleLogger.Info(<span class="string">$&quot;[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]接收到数据: <span class="subst">&#123;Console.InputEncoding.GetString(buffer, <span class="number">0</span>, length)&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// 回发接收到的消息给客户端</span></span><br><span class="line">                                client.Client.Send(buffer, <span class="number">0</span>, length, SocketFlags.None);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                ConsoleLogger.Info(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]关闭&quot;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        catch (Exception exc)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ConsoleLogger.Error(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]引发未处理异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                tcpListener.BeginAcceptTcpClient(callback, tcpListener);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 异步等待客户端的连接请求</span></span><br><span class="line">        listener.BeginAcceptTcpClient(callback, listener);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();<span class="comment">//避免控制台退出</span></span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception exc)</span><br><span class="line">    &#123;</span><br><span class="line">        ConsoleLogger.Error(<span class="string">$&quot;TCP服务端测试出现了未经处理的异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ConsoleLogger.Info(<span class="string">&quot;测试结束&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试效果如下：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver8_1562747097819.png" alt="tcpserver8"></p>
<p>由上图可以看出两者差别并不大，主要的区别在于循环是一个同步方法，而递归使用的是异步方法。</p>
<h2 id="向指定客户端发送消息"><a href="#向指定客户端发送消息" class="headerlink" title="向指定客户端发送消息"></a>向指定客户端发送消息</h2><p>控制台中如果控制向客户端发送消息，肯定要允许我们输入，来客户端并可以输入需要发送的消息。</p>
<p>所以这里我们需要将等待客户端连接请求与提示输入放在两个线程中进行，这里我们直接使用多客户端中“递归”的例子进行改造（当然也可以使用循环的例子，开启一个线程将循环放到另外一个线程中执行）。</p>
<p>因为我们的测试方法是静态方法，所以首先我们需要定义一个静态集合变量来存储连接的客户端。</p>
<p>客户端连接成功后，我们需要将客户端存储到集合中，方便我们遍历，当客户端断开连接后，我们需要将客户端从该集合中移除。因为涉及到多线程，这里建议使用线程安全的集合，或者在操作集合的位置加锁。</p>
<p>调整后代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Concurrent;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SocketTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TcpServerTest.Test();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">TcpServerTest</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">object</span> sync = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="title">List</span>&lt;<span class="title">TcpClient</span>&gt; clients</span> = <span class="keyword">new</span> List&lt;TcpClient&gt;();</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 服务端地址默认本地</span></span><br><span class="line">            IPAddress address = IPAddress.Parse(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">            <span class="comment">// 提醒用户输入要监听的端口</span></span><br><span class="line">            Console.Write(<span class="string">&quot;请输入您要监听的端口：&quot;</span>);</span><br><span class="line">            <span class="built_in">string</span> input = Console.ReadLine();</span><br><span class="line">            <span class="built_in">int</span> port;</span><br><span class="line">            <span class="keyword">while</span> (!<span class="built_in">int</span>.TryParse(input, <span class="keyword">out</span> port))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(<span class="string">&quot;您输入的端口错误，请重新输入：&quot;</span>);</span><br><span class="line">                input = Console.ReadLine();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 创建并打开监听</span></span><br><span class="line">                TcpListener listener = <span class="keyword">new</span> TcpListener(address, port);</span><br><span class="line">                listener.Start();</span><br><span class="line"></span><br><span class="line">                ConsoleLogger.Info(<span class="string">$&quot;启用服务端 <span class="subst">&#123;listener.Server.LocalEndPoint&#125;</span> 成功，等待客户端连接。&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 异步等待客户端的连接请求的回调</span></span><br><span class="line">                AsyncCallback callback = <span class="literal">null</span>;</span><br><span class="line">                callback = <span class="keyword">new</span> AsyncCallback((asyncResult) =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 因为没有使用函数而是使用匿名方法 这里也可以直接用可以访问到的局部变量listener</span></span><br><span class="line">                    <span class="keyword">if</span> (asyncResult.AsyncState <span class="keyword">is</span> TcpListener tcpListener)</span><br><span class="line">                    &#123;</span><br><span class="line">                        TcpClient client = tcpListener.EndAcceptTcpClient(asyncResult);</span><br><span class="line">                        <span class="keyword">lock</span> (sync)</span><br><span class="line">                        &#123;</span><br><span class="line">                            clients.Add(client);</span><br><span class="line">                        &#125;</span><br><span class="line">                        ConsoleLogger.Info(<span class="string">$&quot;客户端连接成功：<span class="subst">&#123;client.Client.RemoteEndPoint.ToString()&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 建立与客户端的数据流</span></span><br><span class="line">                        Task.Factory.StartNew(() =&gt;</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">using</span> NetworkStream stream = client.GetStream();</span><br><span class="line">                            <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];<span class="comment">//设置缓存长度</span></span><br><span class="line">                            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">try</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="built_in">int</span> length = stream.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                                    <span class="keyword">if</span> (length &gt; <span class="number">0</span>)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        ConsoleLogger.Receive(<span class="string">$&quot;[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]接收到数据: <span class="subst">&#123;Console.InputEncoding.GetString(buffer, <span class="number">0</span>, length)&#125;</span>&quot;</span>);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">else</span></span><br><span class="line">                                    &#123;</span><br><span class="line">                                        ConsoleLogger.Info(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]关闭&quot;</span>);</span><br><span class="line">                                        <span class="keyword">lock</span> (sync)</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            <span class="keyword">if</span> (clients.Contains(client))</span><br><span class="line">                                            &#123;</span><br><span class="line">                                                clients.Remove(client);</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                catch (Exception exc)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    ConsoleLogger.Error(<span class="string">$&quot;客户端[<span class="subst">&#123;client.Client.RemoteEndPoint&#125;</span>]引发未处理异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">                                    <span class="keyword">lock</span> (sync)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (clients.Contains(client))</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            clients.Remove(client);</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                        tcpListener.BeginAcceptTcpClient(callback, tcpListener);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 异步等待客户端的连接请求</span></span><br><span class="line">                listener.BeginAcceptTcpClient(callback, listener);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ConsoleLogger.Prompt(<span class="string">&quot;请输入选择你要执行的操作：\r\nall:查看所有客户端列表\r\nall &#123;message&#125;:向所有客户端发送消息\r\nClientNo &#123;message&#125;:向指定客户端发送消息&quot;</span>);</span><br><span class="line">                    input = Console.ReadLine();</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">string</span>.Equals(input, <span class="string">&quot;all&quot;</span>, StringComparison.OrdinalIgnoreCase))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">lock</span> (sync)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (clients.Count == <span class="number">0</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                ConsoleLogger.Error(<span class="string">$&quot;当前还未与客户端建立连接。&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                ConsoleLogger.Info(<span class="string">$&quot;当前共有<span class="subst">&#123;clients.Count&#125;</span>个客户端连接：&quot;</span>);</span><br><span class="line">                                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; clients.Count; i++)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    ConsoleLogger.Info(<span class="string">$&quot;Client No <span class="subst">&#123;i&#125;</span>：<span class="subst">&#123;clients[i].Client.RemoteEndPoint&#125;</span>&quot;</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (Regex.IsMatch(input, <span class="string">&quot;^all (.+)$&quot;</span>, RegexOptions.IgnoreCase))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Match match = Regex.Match(input, <span class="string">&quot;^all (.+)$&quot;</span>, RegexOptions.IgnoreCase);</span><br><span class="line">                        <span class="built_in">string</span> message = match.Groups[<span class="number">1</span>].Value;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">lock</span> (sync)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (clients.Count == <span class="number">0</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                ConsoleLogger.Error(<span class="string">$&quot;当前还未与客户端建立连接。&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; clients.Count; i++)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">try</span></span><br><span class="line">                                    &#123;</span><br><span class="line">                                        ConsoleLogger.Send(<span class="string">$&quot;向客户端[<span class="subst">&#123;clients[i].Client.RemoteEndPoint&#125;</span>]发送消息：<span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                                        clients[i].Client.Send(Console.InputEncoding.GetBytes(message));</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    catch (Exception exc)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        ConsoleLogger.Error(<span class="string">$&quot;向客户端[<span class="subst">&#123;clients[i].Client.RemoteEndPoint&#125;</span>]发送消息失败：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (Regex.IsMatch(input, <span class="string">&quot;^(\\d&#123;1,7&#125;) (.+)$&quot;</span>, RegexOptions.IgnoreCase))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Match match = Regex.Match(input, <span class="string">&quot;^(\\d&#123;1,7&#125;) (.+)$&quot;</span>, RegexOptions.IgnoreCase);</span><br><span class="line">                        <span class="built_in">int</span> clientIndex = <span class="built_in">int</span>.Parse(match.Groups[<span class="number">1</span>].Value);</span><br><span class="line">                        <span class="built_in">string</span> message = match.Groups[<span class="number">2</span>].Value;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">lock</span> (sync)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (clients.Count == <span class="number">0</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                ConsoleLogger.Error(<span class="string">$&quot;当前还未与客户端建立连接。&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span> (clients.Count &gt; clientIndex)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">try</span></span><br><span class="line">                                    &#123;</span><br><span class="line">                                        ConsoleLogger.Send(<span class="string">$&quot;向客户端[<span class="subst">&#123;clients[clientIndex].Client.RemoteEndPoint&#125;</span>]发送消息：<span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                                        clients[clientIndex].Client.Send(Console.InputEncoding.GetBytes(message));</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    catch (Exception exc)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        ConsoleLogger.Error(<span class="string">$&quot;向客户端[<span class="subst">&#123;clients[clientIndex].Client.RemoteEndPoint&#125;</span>]发送消息失败：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                    ConsoleLogger.Error(<span class="string">$&quot;该索引对应的客户端不存在，可能已经被断开连接。&quot;</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        ConsoleLogger.Error(<span class="string">$&quot;内容输入错误，请按照要求重新输入你要进行的操作。&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception exc)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleLogger.Error(<span class="string">$&quot;TCP服务端测试出现了未经处理的异常：<span class="subst">&#123;exc.Message&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ConsoleLogger.Info(<span class="string">&quot;测试结束&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ConsoleLogger</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">object</span> sync = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.Black;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.Yellow;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>)&#125;</span>  Info: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Receive</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.Black;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.Gray;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>)&#125;</span>  Info: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Prompt</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.Black;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.Green;</span><br><span class="line">                Console.WriteLine(message);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Error</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.Black;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.Red;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>)&#125;</span> Error: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Info</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (sync)</span><br><span class="line">            &#123;</span><br><span class="line">                ConsoleColor backgroundColor = Console.BackgroundColor;</span><br><span class="line">                ConsoleColor foregroundColor = Console.ForegroundColor;</span><br><span class="line">                Console.BackgroundColor = ConsoleColor.Black;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.White;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>)&#125;</span>  Info: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                Console.BackgroundColor = backgroundColor;</span><br><span class="line">                Console.ForegroundColor = foregroundColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试效果如下：</p>
<p><img src="https://hd2y.oss-cn-beijing.aliyuncs.com/tcpserver9_1562747097836.png" alt="tcpserver9"></p>

      
    </div>
    <footer class="article-footer">
      <a data-url="http://example.com/server-of-tcp-protocol" data-id="cklbyz0l700da080u5erzc645" data-title="TCP协议之服务端" class="article-share-link">分享</a>
      
      
      
  <ul class="article-tag-list" itemprop="keywords"><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/TCP/" rel="tag">TCP</a></li></ul>

    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/preliminary-understanding-of-mvc5" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">前一篇</strong>
      <div class="article-nav-title">
        
          初步了解 MVC5
        
      </div>
    </a>
  
  
    <a href="/encoding-in-communication" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">后一篇</strong>
      <div class="article-nav-title">通讯中的编码问题</div>
    </a>
  
</nav>

  
</article>


</section>
        
          <aside id="sidebar">
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">分类</h3>
    <div class="widget">
      <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/C/">C#</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/">开发</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/C/">C#</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/C/ASP-NET-Core/">ASP.NET Core</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/C/WPF/">WPF</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E4%B8%9A%E5%8A%A1/">业务</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/">前端</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E5%9F%BA%E7%A1%80/">基础</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E5%B7%A5%E5%85%B7/">工具</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/">MySQL</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle/">Oracle</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL/">PostgreSQL</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQLite/">SQLite</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%BC%80%E5%8F%91/%E6%9D%82%E8%B0%88/">杂谈</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/">操作系统</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/MacOS/">MacOS</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%B7%A5%E5%85%B7/">工具</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E4%BB%B6/">软件</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/">日志</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/%E5%85%AC%E5%91%8A/">公告</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/%E5%BC%80%E7%AE%B1/">开箱</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%97%A5%E5%BF%97/%E6%9D%82%E8%B0%88/">杂谈</a></li></ul></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签</h3>
    <div class="widget">
      <ul class="tag-list" itemprop="keywords"><li class="tag-list-item"><a class="tag-list-link" href="/tags/NET-Standard/" rel="tag">.NET Standard</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/AOP/" rel="tag">AOP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ASCII/" rel="tag">ASCII</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ActiveX/" rel="tag">ActiveX</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Attribute/" rel="tag">Attribute</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Autofac/" rel="tag">Autofac</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/BFG/" rel="tag">BFG</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/CCProxy/" rel="tag">CCProxy</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Chrome/" rel="tag">Chrome</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/DBeaver/" rel="tag">DBeaver</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Expression/" rel="tag">Expression</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Fody/" rel="tag">Fody</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/GDI/" rel="tag">GDI</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Git/" rel="tag">Git</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/GitHub/" rel="tag">GitHub</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Gitea/" rel="tag">Gitea</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/HIS/" rel="tag">HIS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/HongYang/" rel="tag">HongYang</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/IDE/" rel="tag">IDE</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/IE/" rel="tag">IE</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/JavaScript/" rel="tag">JavaScript</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Jint/" rel="tag">Jint</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Json/" rel="tag">Json</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Kindle/" rel="tag">Kindle</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/LIS/" rel="tag">LIS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/LODOP/" rel="tag">LODOP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/MVC/" rel="tag">MVC</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/MacOS/" rel="tag">MacOS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Math/" rel="tag">Math</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/NHibernate/" rel="tag">NHibernate</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Nexus3/" rel="tag">Nexus3</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Note/" rel="tag">Note</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/NuGet/" rel="tag">NuGet</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/OOP/" rel="tag">OOP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Oracle/" rel="tag">Oracle</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/SOA/" rel="tag">SOA</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/SSH/" rel="tag">SSH</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Shell/" rel="tag">Shell</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/TCP/" rel="tag">TCP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Telegram/" rel="tag">Telegram</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/TreeView/" rel="tag">TreeView</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Tuple/" rel="tag">Tuple</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UI/" rel="tag">UI</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/UML/" rel="tag">UML</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Unity/" rel="tag">Unity</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/VS/" rel="tag">VS</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/VSCode/" rel="tag">VSCode</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/ValueTuple/" rel="tag">ValueTuple</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WCF/" rel="tag">WCF</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WPF/" rel="tag">WPF</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WebApi/" rel="tag">WebApi</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WebService/" rel="tag">WebService</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/WinForm/" rel="tag">WinForm</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Windows/" rel="tag">Windows</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Windows-XP/" rel="tag">Windows XP</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/Xml/" rel="tag">Xml</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/decimal/" rel="tag">decimal</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/frp/" rel="tag">frp</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/jdbc/" rel="tag">jdbc</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/mstsc/" rel="tag">mstsc</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E4%B8%B2%E5%8F%A3/" rel="tag">串口</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E4%BB%A3%E7%90%86/" rel="tag">代理</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/" rel="tag">依赖注入</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%85%83%E7%BB%84/" rel="tag">元组</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%8A%A0%E5%AF%86/" rel="tag">加密</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93/" rel="tag">动态链接库</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%8F%8D%E5%B0%84/" rel="tag">反射</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/" rel="tag">多线程</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%A7%94%E6%89%98/" rel="tag">委托</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%B7%A5%E5%85%B7/" rel="tag">工具</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%B9%B4%E9%BE%84/" rel="tag">年龄</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%BA%8F%E5%88%97%E5%8C%96/" rel="tag">序列化</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E5%BC%83%E5%85%83/" rel="tag">弃元</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%89%93%E5%8D%B0/" rel="tag">打印</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%97%A5%E5%BF%97/" rel="tag">日志</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/" rel="tag">构造函数</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/" rel="tag">析构函数</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%9E%9A%E4%B8%BE/" rel="tag">枚举</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%AD%A3%E5%88%99/" rel="tag">正则</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E6%B3%9B%E5%9E%8B/" rel="tag">泛型</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E7%88%AC%E8%99%AB/" rel="tag">爬虫</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E7%91%9E%E7%BE%8E/" rel="tag">瑞美</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/" rel="tag">虚拟机</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%A1%80%E7%90%83%E4%BB%AA/" rel="tag">血球仪</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%A7%A3%E6%9E%84%E5%87%BD%E6%95%B0/" rel="tag">解构函数</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="tag">设计模式</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%B0%83%E8%AF%95/" rel="tag">调试</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%B4%9D%E5%85%8B%E6%9B%BC/" rel="tag">贝克曼</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%BB%E5%8D%A1/" rel="tag">身份证读卡</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%BD%AF%E4%BB%B6/" rel="tag">软件</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E8%BF%9C%E7%A8%8B/" rel="tag">远程</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E9%97%AA%E9%80%80/" rel="tag">闪退</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/%E9%A1%B9%E7%9B%AE/" rel="tag">项目</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签云</h3>
    <div class="widget tagcloud">
      <a href="/tags/NET-Standard/" style="font-size: 10px;">.NET Standard</a> <a href="/tags/AOP/" style="font-size: 10px;">AOP</a> <a href="/tags/ASCII/" style="font-size: 10px;">ASCII</a> <a href="/tags/ActiveX/" style="font-size: 10px;">ActiveX</a> <a href="/tags/Attribute/" style="font-size: 10px;">Attribute</a> <a href="/tags/Autofac/" style="font-size: 10px;">Autofac</a> <a href="/tags/BFG/" style="font-size: 10px;">BFG</a> <a href="/tags/CCProxy/" style="font-size: 10px;">CCProxy</a> <a href="/tags/Chrome/" style="font-size: 10px;">Chrome</a> <a href="/tags/DBeaver/" style="font-size: 12.5px;">DBeaver</a> <a href="/tags/Expression/" style="font-size: 10px;">Expression</a> <a href="/tags/Fody/" style="font-size: 10px;">Fody</a> <a href="/tags/GDI/" style="font-size: 10px;">GDI</a> <a href="/tags/Git/" style="font-size: 12.5px;">Git</a> <a href="/tags/GitHub/" style="font-size: 12.5px;">GitHub</a> <a href="/tags/Gitea/" style="font-size: 10px;">Gitea</a> <a href="/tags/HIS/" style="font-size: 12.5px;">HIS</a> <a href="/tags/HongYang/" style="font-size: 10px;">HongYang</a> <a href="/tags/IDE/" style="font-size: 10px;">IDE</a> <a href="/tags/IE/" style="font-size: 10px;">IE</a> <a href="/tags/JavaScript/" style="font-size: 12.5px;">JavaScript</a> <a href="/tags/Jint/" style="font-size: 12.5px;">Jint</a> <a href="/tags/Json/" style="font-size: 10px;">Json</a> <a href="/tags/Kindle/" style="font-size: 10px;">Kindle</a> <a href="/tags/LIS/" style="font-size: 15px;">LIS</a> <a href="/tags/LODOP/" style="font-size: 10px;">LODOP</a> <a href="/tags/MVC/" style="font-size: 10px;">MVC</a> <a href="/tags/MacOS/" style="font-size: 10px;">MacOS</a> <a href="/tags/Math/" style="font-size: 10px;">Math</a> <a href="/tags/NHibernate/" style="font-size: 10px;">NHibernate</a> <a href="/tags/Nexus3/" style="font-size: 10px;">Nexus3</a> <a href="/tags/Note/" style="font-size: 10px;">Note</a> <a href="/tags/NuGet/" style="font-size: 10px;">NuGet</a> <a href="/tags/OOP/" style="font-size: 10px;">OOP</a> <a href="/tags/Oracle/" style="font-size: 10px;">Oracle</a> <a href="/tags/SOA/" style="font-size: 17.5px;">SOA</a> <a href="/tags/SSH/" style="font-size: 10px;">SSH</a> <a href="/tags/Shell/" style="font-size: 10px;">Shell</a> <a href="/tags/TCP/" style="font-size: 10px;">TCP</a> <a href="/tags/Telegram/" style="font-size: 10px;">Telegram</a> <a href="/tags/TreeView/" style="font-size: 10px;">TreeView</a> <a href="/tags/Tuple/" style="font-size: 10px;">Tuple</a> <a href="/tags/UI/" style="font-size: 10px;">UI</a> <a href="/tags/UML/" style="font-size: 10px;">UML</a> <a href="/tags/Unity/" style="font-size: 10px;">Unity</a> <a href="/tags/VS/" style="font-size: 10px;">VS</a> <a href="/tags/VSCode/" style="font-size: 10px;">VSCode</a> <a href="/tags/ValueTuple/" style="font-size: 10px;">ValueTuple</a> <a href="/tags/WCF/" style="font-size: 12.5px;">WCF</a> <a href="/tags/WPF/" style="font-size: 10px;">WPF</a> <a href="/tags/WebApi/" style="font-size: 15px;">WebApi</a> <a href="/tags/WebService/" style="font-size: 15px;">WebService</a> <a href="/tags/WinForm/" style="font-size: 10px;">WinForm</a> <a href="/tags/Windows/" style="font-size: 10px;">Windows</a> <a href="/tags/Windows-XP/" style="font-size: 12.5px;">Windows XP</a> <a href="/tags/Xml/" style="font-size: 10px;">Xml</a> <a href="/tags/decimal/" style="font-size: 10px;">decimal</a> <a href="/tags/frp/" style="font-size: 10px;">frp</a> <a href="/tags/jdbc/" style="font-size: 10px;">jdbc</a> <a href="/tags/mstsc/" style="font-size: 10px;">mstsc</a> <a href="/tags/%E4%B8%B2%E5%8F%A3/" style="font-size: 10px;">串口</a> <a href="/tags/%E4%BB%A3%E7%90%86/" style="font-size: 12.5px;">代理</a> <a href="/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/" style="font-size: 10px;">依赖注入</a> <a href="/tags/%E5%85%83%E7%BB%84/" style="font-size: 12.5px;">元组</a> <a href="/tags/%E5%8A%A0%E5%AF%86/" style="font-size: 10px;">加密</a> <a href="/tags/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93/" style="font-size: 10px;">动态链接库</a> <a href="/tags/%E5%8F%8D%E5%B0%84/" style="font-size: 10px;">反射</a> <a href="/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/" style="font-size: 20px;">多线程</a> <a href="/tags/%E5%A7%94%E6%89%98/" style="font-size: 10px;">委托</a> <a href="/tags/%E5%B7%A5%E5%85%B7/" style="font-size: 10px;">工具</a> <a href="/tags/%E5%B9%B4%E9%BE%84/" style="font-size: 10px;">年龄</a> <a href="/tags/%E5%BA%8F%E5%88%97%E5%8C%96/" style="font-size: 10px;">序列化</a> <a href="/tags/%E5%BC%83%E5%85%83/" style="font-size: 10px;">弃元</a> <a href="/tags/%E6%89%93%E5%8D%B0/" style="font-size: 10px;">打印</a> <a href="/tags/%E6%97%A5%E5%BF%97/" style="font-size: 10px;">日志</a> <a href="/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/" style="font-size: 10px;">构造函数</a> <a href="/tags/%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/" style="font-size: 10px;">析构函数</a> <a href="/tags/%E6%9E%9A%E4%B8%BE/" style="font-size: 10px;">枚举</a> <a href="/tags/%E6%AD%A3%E5%88%99/" style="font-size: 15px;">正则</a> <a href="/tags/%E6%B3%9B%E5%9E%8B/" style="font-size: 12.5px;">泛型</a> <a href="/tags/%E7%88%AC%E8%99%AB/" style="font-size: 10px;">爬虫</a> <a href="/tags/%E7%91%9E%E7%BE%8E/" style="font-size: 10px;">瑞美</a> <a href="/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/" style="font-size: 12.5px;">虚拟机</a> <a href="/tags/%E8%A1%80%E7%90%83%E4%BB%AA/" style="font-size: 10px;">血球仪</a> <a href="/tags/%E8%A7%A3%E6%9E%84%E5%87%BD%E6%95%B0/" style="font-size: 10px;">解构函数</a> <a href="/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" style="font-size: 12.5px;">设计模式</a> <a href="/tags/%E8%B0%83%E8%AF%95/" style="font-size: 10px;">调试</a> <a href="/tags/%E8%B4%9D%E5%85%8B%E6%9B%BC/" style="font-size: 10px;">贝克曼</a> <a href="/tags/%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%BB%E5%8D%A1/" style="font-size: 10px;">身份证读卡</a> <a href="/tags/%E8%BD%AF%E4%BB%B6/" style="font-size: 10px;">软件</a> <a href="/tags/%E8%BF%9C%E7%A8%8B/" style="font-size: 10px;">远程</a> <a href="/tags/%E9%97%AA%E9%80%80/" style="font-size: 10px;">闪退</a> <a href="/tags/%E9%A1%B9%E7%9B%AE/" style="font-size: 10px;">项目</a>
    </div>
  </div>

  
    
  <div class="widget-wrap">
    <h3 class="widget-title">归档</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/12/">十二月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/11/">十一月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/09/">九月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/05/">五月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/04/">四月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/03/">三月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/02/">二月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2020/01/">一月 2020</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/12/">十二月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/11/">十一月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/10/">十月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/09/">九月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/08/">八月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/07/">七月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/05/">五月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/04/">四月 2019</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/03/">三月 2019</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">最新文章</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/csharp-expression-script-evaluation-problems">C# 中表达式计算问题</a>
          </li>
        
          <li>
            <a href="/aspnet-core-001-source-code-compilation-and-debugging">ASP.NET Core - 001 源码编译与调试</a>
          </li>
        
          <li>
            <a href="/aspnet-core-000-development-environment-configuration">ASP.NET Core - 000 开发环境配置</a>
          </li>
        
          <li>
            <a href="/dotnet-core-migration-web-service">迁移 Web Service 项目到 .NET Core</a>
          </li>
        
          <li>
            <a href="/his-development-environment">环境部署</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      
      &copy; 2021 hd2y<br>
      Powered by <a href="https://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>

    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    


<script src="/js/jquery-3.4.1.min.js"></script>



  
<script src="/fancybox/jquery.fancybox.min.js"></script>




<script src="/js/script.js"></script>





  </div>
</body>
</html>